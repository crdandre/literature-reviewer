[build-system]
requires = ["setuptools>=68"]
build-backend = "setuptools.build_meta"

[project]
name = "literature-reviewer"
version = "0.0.0"
description = "literature reviewer"
readme = "README.md"
authors = [
    { name = "Christian D'Andrea", email = "crdandre@gmail.com" },
]
dependencies = [
    "backoff ~= 2.2.1",
    # "controlflow ~= 0.10.0",
    # "crewai ~= 0.67.1",
    # "ell-ai ~= 0.0.6",
    "hdbscan ~= 0.8.37",
    "langchain ~= 0.3.0",
    "langchain-chroma ~= 0.1.4",
    "langchain-community ~= 0.3.1",
    "langchain-openai ~= 0.2.1",
    # "langgraph ~= 0.2.34",
    "marker-pdf ~= 0.2.17",
    "pandas ~= 2.2.3",
    "pydantic ~= 2.9.2",
    "pypdf ~= 5.0.0",
    "pdf2image ~= 1.16.0",
    "python-dotenv ~= 1.0.1",
    "chromadb ~= 0.5.11",
    "rich ~= 13.9.2",
    "streamlit ~= 1.38.0",
    # "tavily-python ~= 0.5.0",
    "umap-learn ~= 0.5.6",
]

[project.optional-dependencies]
dev = [
    "black ~= 24.4",
    "bumpver ~= 2023.1129",
    "flake8 ~= 7.1",
    "isort ~= 5.12",
    "pre-commit ~= 3.5",
]
test = [
    "aiohttp ~= 3.10.5",
    "pytest ~= 7.4",
    "pytest-asyncio ~= 0.21",
]

[tool.bumpver]
current_version = "0.0.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{version}"'
]

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]
combine_as_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
concurrency = ["greenlet", "thread"]

[tool.coverage.report]
show_missing = true
omit = ["tests/*"]
